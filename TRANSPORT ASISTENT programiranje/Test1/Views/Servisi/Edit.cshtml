@model DDtrafic.ViewModels.ServisiIndexData

@{
    ViewBag.Title = "Izmena servisa";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="jumbotron" style="background-image:none;padding:0px;">
    <div class="page-header">
        <h1>Izmena servisa  <small>Vozilo: @Model.Registracija</small></h1>

        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="../Servisi">Servisi</a>
            </li>
            <li class="breadcrumb-item active">Izmeni</li>
        </ol>

    </div>
</div>
<hr />
<div class="page-heading">
    <h1 class="heading-title">
        Izmena servisa
        <br />
        <small style="font-size:16px; font-weight:600;">Vozilo: @Model.Registracija</small>

    </h1>
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="../Servisi">Servisi</a>
        </li>
        <li class="breadcrumb-item active">Izmeni</li>
    </ol>
</div>
<hr />

<div class="row" style="background:#eee;padding:20px; margin:0; border-radius:3px;">

    @*@using (Ajax.BeginForm("Edit", new AjaxOptions { HttpMethod = "POST", InsertionMode = InsertionMode.Replace, OnSuccess = "OnSuccess", OnFailure = "OnFailure" }))*@
    @using (Html.BeginForm("Edit", "Servisi", FormMethod.Post, new { onkeydown = "return event.keyCode!=13" }))

    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id, new { id = "Id" })
        @Html.HiddenFor(model => model.VpId, new { id = "VpId" })

        <div>
            <label class="control-label col-sm-2">Alarm grupa</label>
            <div class="col-sm-10">
                @Html.DropDownList("VpAlarmGrupaId", null, "", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.VpAlarmGrupaId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="ui-widget">
            <label class="control-label col-sm-2" for="vozilo">Vozilo </label>
            <div class="col-sm-10">
                <input id="vozilo" class="form-control" value="@ViewBag.Oznaka">
            </div>
        </div>
        <div>
            <label class="control-label col-sm-2">Alarm tip</label>
            <div class="col-sm-10">
                @Html.DropDownList("VpAlarmTip", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.VpAlarmTip, "", new { @class = "text-danger" })
            </div>
        </div>
        <div>
            <label class="control-label col-sm-2">Datum urađeno</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.Datum, "{0:dd-MM-yyyy}", new { @class = " form-control  datepicker-dat-kreiranja" })
            </div>
        </div>
        <div>
            <label class="control-label col-sm-2">Kilometraža</label>
            <div class="col-sm-10">
                @Html.EditorFor(model => model.Km, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Km, "", new { @class = "text-danger" })
            </div>
        </div>
        <div>
            <label class="control-label col-sm-2">Km isteka</label>
            <div class="col-sm-10">
                @Html.EditorFor(model => model.KmIsteka, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KmIsteka, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="alarm">
            <label class="control-label col-sm-2">Datum isteka</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.DatumIsteka, "{0:dd-MM-yyyy}", new { @class = "form-control datepicker-dat-isteka" })
            </div>
        </div>
        <div class="odrzavanje">
            <label class="control-label col-sm-2">Km alarma</label>
            <div class="col-sm-10">
                @Html.EditorFor(model => model.KmAlarma, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KmAlarma, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="alarm">
            <label class="control-label col-sm-2">Datum alarma</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.DatumAlarma, "{0:dd-MM-yyyy}", new { @class = "form-control datepicker-dat-alarma" })
            </div>
        </div>
        <div>
            <label class="control-label col-sm-2">Napomena</label>
            <div class="col-sm-10">
                @Html.EditorFor(model => model.Napomena, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Napomena, "", new { @class = "text-danger" })
            </div>
        </div>
        <div>
            <label class="control-label col-sm-2">Plaćeno din.</label>
            <div class="col-sm-10">
                @Html.EditorFor(model => model.IznosDin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IznosDin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div>
            <label class="control-label col-sm-2">Plaćeno eur.</label>
            <div class="col-sm-10">
                @Html.EditorFor(model => model.IznosEur, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IznosEur, "", new { @class = "text-danger" })
            </div>
        </div>
        <div>
            <label class="control-label col-sm-2"></label>
            <div class="col-sm-10">
                <div class="col-sm-4">
                    <input type="submit" value="Sačuvaj" class="btn btn-primary pull-right " />
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryDatePickerForm")
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">


                $('.datepicker-dat-kreiranja, .datepicker-dat-isteka, .datepicker-dat-alarma').datepicker({ dateFormat: 'dd-mm-yy' });
                $('.datepicker-dat-kreiranja, .datepicker-dat-isteka, .datepicker-dat-alarma').attr("autocomplete", "off");

                $(document).ready(function () {

                    var selectedTipAlarma = $("#VpAlarmTip").val();

                    $("#VpAlarmTip").change(function () {
                        addVrednostiServisa($("#VpAlarmTip").val(), $("#Km").val());
                    });

                    $("#Km").change(function () {
                        addVrednostiServisa(selectedTipAlarma, $("#Km").val());
                    });

                    $("#vozilo").autocomplete({
                        source: function (request, response) {
                            $.ajax({
                                url: "../Alarmi/GetVozila?query=" + request.term,
                                dataType: "json",
                                success: function (data) {
                                    response($.map(data, function (v, i) {
                                        return {
                                            value: v.Name,
                                            id: v.Id
                                        };
                                    }));
                                }
                            })
                        },
                        minLength: 2,
                        select: function (event, ui) {
                            $('#VpId').val(ui.item.id);
                        }
                    });
                });

                function OnSuccess(response) {
                    alert(response);
                    window.close();
                }

                function OnFailure(response) {
                    alert(response);
                }

                $("form").bind("keydown", function (e) {
                    if (e.keyCode === 13) return false;
                });

                $(function () {
                    $.validator.methods.date = function (value, element) {
                        if ($.browser.webkit) {
                            //ES - Chrome does not use the locale when new Date objects instantiated:
                            var d = new Date();

                            return this.optional(element) || !/Invalid|NaN/.test(new Date(d.toLocaleDateString(value)));
                        }
                        else {
                            return this.optional(element) || !/Invalid|NaN/.test(new Date(value));
                        }
                    };
                });

                function addVrednostiServisa(selectedTipAlarma, km) {
                    //alert(km);
                    if (selectedTipAlarma == null || selectedTipAlarma == '')
                        {
                        alert("Nije izabran tip alarma. ");
                        return;
                        }
                    $.getJSON('@Url.Action("GetVrednostiServisa")', { tipId: selectedTipAlarma, km: km }, function (data) {
                        if (data != null && !jQuery.isEmptyObject(data)) {
                            $("#KmIsteka").val(data.kmIsteka);
                            $("#KmAlarma").val(data.kmAlarma);
                        };
                    });
                }

    </script>
}

