@model Bex.Models.Kontakt

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="wrapper">
    <div id="page-wrapper">
        <div class="row">
            <div class="card">

                <div class="card-header card-header-primary">

                    <h2 class="card-title" style="color:#666;">Kontakt: @ViewBag.NazivKontakta</h2>

                </div>


                <div class="card-body">
                    <div class="container">
                        <div class="container-fluid" style="margin-bottom:10px;">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item">
                                    <a href="../Kontakt">Kontakti</a>
                                </li>
                                <li class="breadcrumb-item active">Izmeni</li>
                            </ol>
                            <h3>Izmena osnovnih podataka o kontaktu</h3>
                            <hr>
                            <p>Unesite ostale podatke o kontaktu</p>

                        </div>


                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.Id, new { id = "Id" })
                            @Html.HiddenFor(model => model.FirmaUnosId, new { id = "FirmaUnosId" })
                            <input type="hidden" id="Pravno" name="Pravno">
                            <input type="hidden" id="Stranac" name="Stranac">

                            <div class="form-group">
                                <label class="control-label col-sm-2">Ime</label>
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.Ime, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Ime, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-sm-2">Prezime</label>
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.Prezime, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Prezime, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            @*<div class="form-group">
                            <label class="control-label col-sm-2" for="Pravno">Pravno</label>
                            <div class="col-sm-10">
                                <div class="form-check">
                                    <label class="form-check-label control-label">
                                        <input class="form-check-input" type="checkbox" value="" id="PravnoCheck">
                                        <span class="form-check-sign">
                                            <span class="check"></span>
                                        </span>
                                    </label>
                                </div>
                            </div>
                        </div>*@
                            <div class="form-group">
                                <label class="control-label col-sm-2" for="Stranac">Stranac</label>
                                <div class="col-sm-10">
                                    <div class="form-check">
                                        <label class="form-check-label control-label">
                                            <input class="form-check-input" type="checkbox" value="" id="StranacCheck">
                                            <span class="form-check-sign">
                                                <span class="check"></span>
                                            </span>
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-sm-2"></label>
                                <div class="col-sm-10">
                                    <div class="btn-group pull-right ">
                                        <input type="submit" value="Sačuvaj" class="btn btn-default btn-xs" />
                                    </div>
                                </div>
                            </div>
                        }

                    </div>
                </div>
            </div>
            <div class="card">
                @if (ViewBag.Pravno)
                {
                    <div id="editPravnoPartial">
                        @Html.Action("EditDetailsPravnoPartial", new { kontaktId = Model.Id })
                    </div>
                }
                else
                {
                    <div id="editFizickoPartial">
                        @Html.Action("EditDetailsFizickoPartial", new { kontaktId = Model.Id })
                    </div>
                }

            </div>

            <div class="card">
                <div id="createAdresaPartial">
                    @Html.Action("CreateDetailsAdresePartial", new { kontaktId = Model.Id })
                </div>
            </div>
            @if (ViewBag.Pravno)
            {
                <div class="card">
                    <div id="createDelatnostPartial">
                        @Html.Action("CreateDetailsDelatnostPartial", new { kontaktId = Model.Id })
                    </div>
                </div>
             }

            <div class="card">
                <div id="createEmailPartial">
                    @Html.Action("CreateDetailsEmailPartial", new { kontaktId = Model.Id })
                </div>
            </div>
            <div class="card">
                <div id="createTelefonPartial">
                    @Html.Action("CreateDetailsTelefoniPartial", new { kontaktId = Model.Id })
                </div>
            </div>
            <div class="card">
                <div id="createZiroRacunPartial">
                    @Html.Action("CreateDetailsZiroRacuniPartial", new { kontaktId = Model.Id })
                </div>
            </div>
        </div>
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
            <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/smoothness/jquery-ui.css">
            <script src="//code.jquery.com/jquery-1.12.4.js"></script>
            <script src="//code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

            <script type="text/javascript">


                $(document).ready(function () {

                    $('.datepicker-dat-fl').datepicker({ dateFormat: 'dd-mm-yy' });
                    $('.datepicker-dat-fl').attr("autocomplete", "off");

                    $('#PravnoCheck').change(function () {

                        $('#Pravno').val($(this).is(':checked'))
                    });

                    $('#StranacCheck').change(function () {

                        $('#Stranac').val($(this).is(':checked'))

                    });

                    $("#kontakt").autocomplete({
                        source: function (request, response) {

                            $.ajax({
                                url: "/Kontakt/GetKontaktAutocomplete?query=" + request.term + "&isPravno=true&isAll=false",
                                dataType: "json",
                                success: function (data) {
                                    response($.map(data, function (v, i) {
                                        return {
                                            value: v.Name,
                                            id: v.Id
                                        };
                                    }));
                                }
                            });
                        },
                        minLength: 2,
                        select: function (event, ui) {
                            $('#SedisteKontaktId').val(ui.item.id);
                        }
                    });


                    $("#adresa").autocomplete({
                        source: function (request, response) {
                            $.ajax({
                                url: "/Kontakt/GetAdrese?query=" + request.term,
                                dataType: "json",
                                success: function (data) {
                                    response($.map(data, function (v, i) {
                                        return {
                                            value: v.Name,
                                            id: v.Id

                                        };
                                    }));
                                }
                            })
                        },
                        minLength: 2,
                        select: function (event, ui) {
                            $('#PakId').val(ui.item.id);
                            $('#Adresa').val(ui.item.value);
                        }
                    });


                })


            </script>



        }
    </div>
</div>
