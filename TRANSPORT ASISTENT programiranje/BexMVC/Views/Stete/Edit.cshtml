@model Bex.Models.VozniParkSteta

@{
    ViewBag.Title = "Štete - Izmena";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="wrapper">
    <div id="page-wrapper">
        <div class="row">
            <div class="card">

                <div class="card-header card-header-primary">

                    <h2 class="card-title" style="color:#666;">Štete - Izmena</h2>

                </div>

                <div class="card-body">
                    <div class="container">
                        <div class="container-fluid" style="margin-bottom:10px;">

                            <!-- Breadcrumbs-->
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item">
                                    <a href="../Stete">Štete</a>
                                </li>
                                <li class="breadcrumb-item active">Izmeni</li>
                            </ol>

                            <!-- Page Content -->
                            <h3>Izmena štete</h3>
                            <hr>
                            <p></p>

                        </div>
                        @using (Html.BeginForm(new { @class = "form-horizontal" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.Id, new { id = "Id" })
                            @Html.HiddenFor(model => model.StetocinaZaposleniId, new { id = "StetocinaZaposleniId" })
                            @*@Html.HiddenFor(model => model.ModelId, new { id = "ModelId" })*@
                            <input type="hidden" id="KnjigovodstveniManjak" name="KnjigovodstveniManjak">
                            <input type="hidden" id="PotpisanaOdluka" name="PotpisanaOdluka">
                            <input type="hidden" id="Nenaplativo" name="Nenaplativo">
                            <input type="hidden" id="Sporno" name="Sporno">
                            <input type="hidden" id="Kes" name="Kes">
                            <input type="hidden" id="Racun" name="Racun">

                            <div class="form-group">
                                <label class="control-label col-sm-2">Broj</label>
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            @*<div>
                <label class="control-label col-sm-2" for="Nalog">Nalog</label>
                <div class="col-sm-10">

                    @Html.DropDownList("NalogIzdao", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.NalogIzdao, "", new { @class = "text-danger" })
                </div>
            </div>*@

                            <div>
                                <label class="control-label col-sm-2" for="ZavisnaTabelaId">Vozilo</label>
                                <div class="col-sm-10">
                                    @*<input name="Broj" id="Broj" class="form-control input-sm" type="text">*@
                                    @Html.DropDownList("ZavisnaTabelaId", null, " ", htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.ZavisnaTabelaId, "", new { @class = "text-danger" })

                                </div>
                            </div>

                            <div>
                                <label class="control-label col-sm-2" for="FirmaStete">Firma štete</label>
                                <div class="col-sm-10">
                                    @*<input name="Broj" id="Broj" class="form-control input-sm" type="text">*@
                                    @Html.DropDownList("FirmaSteteId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.FirmaSteteId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div>
                                <label class="control-label col-sm-2" for="Kategorija">Kategorija</label>
                                <div class="col-sm-10">
                                    @Html.DropDownList("KategorijaId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.KategorijaId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-sm-2">Opis</label>
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.Opis, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Opis, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-sm-2">Napomena</label>
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.Napomena, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Napomena, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div>
                                <label class="control-label col-sm-2" for="Centar">Centar</label>
                                <div class="col-sm-10">
                                    @*<input name="Broj" id="Broj" class="form-control input-sm" type="text">*@
                                    @Html.DropDownList("StetocinaCentarId", null, " ", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.StetocinaCentarId, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="ui-widget">
                                <label class="control-label col-sm-2" for="zaposleni">Zaposleni</label>
                                <div class="col-sm-10">
                                    <div class='input-group'>
                                        <input id="stetocinaZaposleni" class="form-control" value="@ViewBag.StetocinaZaposleniId">
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-search"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>

                            <div>
                                <label class="control-label col-sm-2">D. predaje pravnoj s.</label>
                                <div class="col-sm-10">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model.DatumPredajePravnoj, "{0:dd-MM-yyyy}", new { @class = " form-control   datepicker-datum-predaje-ps" })
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div>
                                <label class="control-label col-sm-2">Datum odluke</label>
                                <div class="col-sm-10">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model.DatumOdluke, "{0:dd-MM-yyyy}", new { @class = " form-control   datepicker-datum-odluke" })
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div>
                                <label class="control-label col-sm-2" for="KnjigovodstveniManjak">Knjig. manjak</label>
                                <div class="col-sm-10">
                                    <div class="form-check">
                                        <label class="form-check-label control-label">
                                            <input class="form-check-input" type="checkbox" @(Convert.ToBoolean(Model.KnjigovodstveniManjak) == true ? "checked='checked'" : string.Empty) value="" id="ManjakCheck">
                                            <span class="form-check-sign">
                                                <span class="check"></span>
                                            </span>
                                        </label>
                                    </div>
                                </div>
                            </div>

                            <div>
                                <label class="control-label col-sm-2" for="PotpisanaOdluka">Potpisana odluka</label>
                                <div class="col-sm-10">
                                    <div class="form-check">
                                        <label class="form-check-label control-label">
                                            <input class="form-check-input" type="checkbox" @(Convert.ToBoolean(Model.PotpisanaOdluka) == true ? "checked='checked'" : string.Empty) value="" id="OdlukaCheck">
                                            <span class="form-check-sign">
                                                <span class="check"></span>
                                            </span>
                                        </label>
                                    </div>
                                </div>
                            </div>

                            <div>
                                <label class="control-label col-sm-2" for="Sporno">U obradi</label>
                                <div class="col-sm-10">
                                    <div class="form-check">
                                        <label class="form-check-label control-label">
                                            <input class="form-check-input" type="checkbox" @(Convert.ToBoolean(Model.Sporno) == true ? "checked='checked'" : string.Empty) value="" id="SpornoCheck">
                                            <span class="form-check-sign">
                                                <span class="check"></span>
                                            </span>
                                        </label>
                                    </div>
                                </div>
                            </div>

                            <div>
                                <label class="control-label col-sm-2" for="Nenaplativo">Nenaplativo</label>
                                <div class="col-sm-10">
                                    <div class="form-check">
                                        <label class="form-check-label control-label">
                                            <input class="form-check-input" type="checkbox" @(Convert.ToBoolean(Model.Nenaplativo) == true ? "checked='checked'" : string.Empty) value="" id="NenaplativoCheck">
                                            <span class="form-check-sign">
                                                <span class="check"></span>
                                            </span>
                                        </label>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-sm-2">Iznos štete</label>
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.IznosRsd, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.IznosRsd, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-sm-2">Naplatiti od radnika</label>
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.IznosZaNaplatu, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.IznosZaNaplatu, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div>
                                <label class="control-label col-sm-2" for="Kes">Keš</label>
                                <div class="col-sm-10">
                                    <div class="form-check">
                                        <label class="form-check-label control-label">
                                            <input class="form-check-input" type="checkbox" @(Convert.ToBoolean(Model.Kes) == true ? "checked='checked'" : string.Empty) value="" id="KesCheck">
                                            <span class="form-check-sign">
                                                <span class="check"></span>
                                            </span>
                                        </label>
                                    </div>
                                </div>
                            </div>

                            <div>
                                <label class="control-label col-sm-2" for="Racun">Račun</label>
                                <div class="col-sm-10">
                                    <div class="form-check">
                                        <label class="form-check-label control-label">
                                            <input class="form-check-input" type="checkbox" @(Convert.ToBoolean(Model.Racun) == true ? "checked='checked'" : string.Empty) value="" id="RacunCheck">
                                            <span class="form-check-sign">
                                                <span class="check"></span>
                                            </span>
                                        </label>
                                    </div>
                                </div>
                            </div>


                            <div class="form-group">
                                <label class="control-label col-sm-2"></label>
                                <div class="col-sm-10">
                                    <div class="btn-group pull-right ">
                                        <input type="submit" value="Sačuvaj" class="btn btn-default btn-xs" />
                                    </div>
                                </div>
                            </div>
                        }

                    </div>
                </div>
            </div>


        </div>
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
            <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/smoothness/jquery-ui.css">
            <link rel="stylesheet" href="~/Content/jquery.ui.timepicker.css">
            @*<link rel="stylesheet" href="~/Content/multi-select.css">*@
            <script src="//code.jquery.com/jquery-1.12.4.js"></script>
            <script src="//code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
            <script src="~/Content/bootstrap/js/jquery.ui.timepicker.js"></script>
            @*<script src="~/Content/bootstrap/js/jquery.multi-select.js"></script>*@
            <script type="text/javascript">


                

                    $('.datepicker-datum-predaje-ps, .datepicker-datum-odluke').datepicker({ dateFormat: 'dd-mm-yy' });
                    $('.datepicker-datum-predaje-ps, .datepicker-datum-odluke').attr("autocomplete", "off");

                    if ($('#stetocinaZaposleni').val() > '0') {
                        $('#StetocinaCentarId').val == '-1';
                        $('#StetocinaCentarId').attr('disabled', 'disabled');
                    } else {
                        $('#StetocinaCentarId').attr('disabled', false);
                    }
                    if ($('#StetocinaCentarId').val() > '0') {
                        $('#stetocinaZaposleni').val == '-1';
                        $('#stetocinaZaposleni').attr('disabled', 'disabled');
                    } else {
                        $('#stetocinaZaposleni').attr('disabled', false);

                    }

                    $("#stetocinaZaposleni").autocomplete({
                        source: function (request, response) {

                            $.ajax({
                                url: "/Zaposleni/GetZaposleniPoStaromAutocomplete?query=" + request.term,
                                dataType: "json",
                                success: function (data) {
                                    response($.map(data, function (v, i) {
                                        return {
                                            value: v.Name,
                                            id: v.Id,
                                            pomId: v.PomocniId
                                        };
                                    }));
                                }
                            });
                        },
                        minLength: 2,
                        select: function (event, ui) {
                            $('#StetocinaZaposleniId').val(ui.item.id);
                            //$('#RadnoMestoId').val(ui.item.pomId);
                            console.log("Kontakt ---- Selected: " + ui.item.id + " aka " + ui.item.value);

                        }
                    });

                    $('#stetocinaZaposleni').change(function () {
                        if ($(this).val() > '0') {
                            $('#StetocinaCentarId').val == '-1';
                            $('#StetocinaCentarId').attr('disabled', 'disabled');
                        } else {
                            $('#StetocinaCentarId').attr('disabled', false);
                        }
                    });
                    $('#StetocinaCentarId').change(function () {
                        if ($(this).val() > '0') {
                            $('#stetocinaZaposleni').val == '-1';
                            $('#stetocinaZaposleni').attr('disabled', 'disabled');
                        } else {
                            $('#stetocinaZaposleni').attr('disabled', false);

                        }
                    });
                    
                    $('#KnjigovodstveniManjak').val(@(Convert.ToBoolean(Model.KnjigovodstveniManjak) == true ? "true" : "false"));
                    $('#ManjakCheck').change(function () {

                        $('#KnjigovodstveniManjak').val($(this).is(':checked'))

                        });
                    $('#PotpisanaOdluka').val(@(Convert.ToBoolean(Model.PotpisanaOdluka) == true ? "true" : "false"));
                    $('#OdlukaCheck').change(function () {

                        $('#PotpisanaOdluka').val($(this).is(':checked'))

                        });
                    $('#Nenaplativo').val(@(Convert.ToBoolean(Model.Nenaplativo) == true ? "true" : "false"));
                    $('#NenaplativoCheck').change(function () {

                        $('#Nenaplativo').val($(this).is(':checked'))

                        });
                    $('#Sporno').val(@(Convert.ToBoolean(Model.Sporno) == true ? "true" : "false"));
                    $('#SpornoCheck').change(function () {

                        $('#Sporno').val($(this).is(':checked'))

                        });
                    $('#Kes').val(@(Convert.ToBoolean(Model.Kes) == true ? "true" : "false"));
                    $('#KesCheck').change(function () {

                        $('#Kes').val($(this).is(':checked'))

                        });
                    $('#Racun').val(@(Convert.ToBoolean(Model.Racun) == true ? "true" : "false"));
                    $('#RacunCheck').change(function () {

                        $('#Racun').val($(this).is(':checked'))

                        });

                    

            </script>



        }
    </div>
</div>
