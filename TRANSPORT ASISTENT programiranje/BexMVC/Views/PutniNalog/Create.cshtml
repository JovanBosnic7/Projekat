@model Bex.Models.PutniNalog

@{
    ViewBag.Title = "Putni nalog - Dodaj";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="wrapper">
    <div id="page-wrapper">
        <div class="row">
            <div class="card">

                <div class="card-header card-header-primary">

                    <h2 class="card-title" style="color:#666;">Putni nalog</h2>

                </div>

                <div class="card-body">
                    <div class="container">
                        <div class="container-fluid" style="margin-bottom:10px;">

                            <!-- Breadcrumbs-->
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item">
                                    <a href="../PutniNalog">Putni nalog</a>
                                </li>
                                <li class="breadcrumb-item active">Dodaj</li>
                            </ol>

                            <!-- Page Content -->
                            <h3>Dodavanje putnog naloga</h3>
                            <hr>
                            <p></p>

                        </div>
                        @using (Html.BeginForm(new { @class = "form-horizontal" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            @Html.HiddenFor(model => model.VozacId, new { id = "VozacId" })
                            @Html.HiddenFor(model => model.RadnoMestoId, new { id = "RadnoMestoId" })

                            <div>
                                <label class="control-label col-sm-2" for="Vozilo">Vozilo</label>
                                <div class="col-sm-10">
                                    @Html.DropDownList("VpId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.VpId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="ui-widget">
                                <label class="control-label col-sm-2" for="Vozac">Vozač</label>
                                <div class="col-sm-10">
                                    <div class='input-group'>
                                        <input id="vozac" class="form-control" value="@ViewBag.Vozac">

                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-search"></span>
                                        </span>
                                    </div>
                                    
                                </div>
                            </div>

                            <div>
                                <label class="control-label col-sm-2" for="Tip">Tip</label>
                                <div class="col-sm-10">
                                    @Html.DropDownList("TipId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.TipId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div>
                                <label class="control-label col-sm-2" for="Region">Region</label>
                                <div class="col-sm-10">
                                    @Html.DropDownList("RegionId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div>
                                <label class="control-label col-sm-2" for="Reon">Reon</label>
                                <div class="col-sm-10">
                                    @Html.DropDownList("ReonId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ReonId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div>
                                <label class="control-label col-sm-2">Napomena</label>
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.Napomena, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Napomena, "", new { @class = "text-danger" })

                                </div>
                            </div>


                            <div>
                                <label class="control-label col-sm-2">Datum start</label>
                                <div class="col-sm-10">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model.DatumStart, "{0:dd-MM-yyyy}", new { @class = " form-control   datepicker-dat-start" })
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                    
                                </div>
                            </div>
                            <div>
                                <label class="control-label col-sm-2">Vreme start</label>
                                <div class="col-sm-10">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model.VremeStart, new { @class = " form-control timepicker-start" })
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-time"></span>
                                        </span>
                                    </div>
                                    
                                </div>
                            </div>
                            <div>
                                <label class="control-label col-sm-2">KM start</label>
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(model => model.KmStart, new { @class = " form-control " })
                                </div>
                            </div>

                            <div>
                                <label class="control-label col-sm-2">Datum stop</label>
                                <div class="col-sm-10">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model.DatumStop, "{0:dd-MM-yyyy}", new { @class = " form-control   datepicker-dat-stop" })
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                    
                                </div>
                            </div>
                            <div>
                                <label class="control-label col-sm-2">Vreme stop</label>
                                <div class="col-sm-10">
                                    <div class='input-group'>
                                        @Html.TextBoxFor(model => model.VremeStop, new { @class = " form-control timepicker-stop" })
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-time"></span>
                                        </span>
                                    </div>
                                    
                                </div>
                            </div>
                            <div>
                                <label class="control-label col-sm-2">KM stop</label>
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(model => model.KmStop, new { @class = " form-control " })
                                </div>
                            </div>

                            <div>
                                <label class="control-label col-sm-2">Ukupno km</label>
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.KmUkupno, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.KmUkupno, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div>
                                <label class="control-label col-sm-2">Relacija</label>
                                <div class="col-sm-10">
                                    <select id='relacija1' size="20" class="form-control"></select>
                                    @Html.EditorFor(model => model.Relacija, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            <div>
                                <label class="control-label col-sm-2"></label>
                                <div class="col-sm-10">
                                    <div class="btn-group pull-right ">
                                        <input type="submit" value="Sačuvaj" class="btn btn-default btn-xs" />
                                    </div>
                                </div>
                            </div>
                        }

                    </div>
                </div>
            </div>


        </div>
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryDatePickerForm")
            @Scripts.Render("~/bundles/jqueryval")

            <script type="text/javascript">


                $(document).ready(function () {


                    $('.datepicker-dat-start, .datepicker-dat-stop').datepicker({ dateFormat: 'dd-mm-yy' });
                    $('.datepicker-dat-start, .datepicker-dat-stop, .timepicker-stop, .timepicker-start').attr("autocomplete", "off");

                    $('.timepicker-start, .timepicker-stop').timepicker({
                        showAnim: 'blind',
                        hourText: 'Sati',
                        minuteText: 'Minuti',
                        nowButtonText: 'Trenutno',
                        showNowButton: true
                    });

                    $('#relacija1').change(function () {
                        var option = $("#relacija1 option:selected").val();
                        var relacijaTxt = $('#Relacija').val();
                        if (relacijaTxt != "")
                            $('#Relacija').val(relacijaTxt + " - " + option);
                        else
                            $('#Relacija').val(option);

                    });

                    $("#KmStart").change(function () {
                        var kmRazlika = $("#KmStop").val() - $("#KmStart").val();
                        if (kmRazlika < 0) kmRazlika = 0;
                        $("#KmUkupno").val(kmRazlika);
                    });

                    $("#KmStop").change(function () {
                        var kmRazlika = $("#KmStop").val() - $("#KmStart").val();
                        $("#KmUkupno").val(kmRazlika);
                    });

                    //$('#relacija').multiSelect({

                    //    afterSelect: function (values) {
                    //        //alert("Select value: " + values);
                    //        $("#"+values+"-selectable").css("display", "block");
                    //        //$("#1697-selectable").html("aaaa");
                    //    }
                    //    //,
                    //    //afterDeselect: function (values) {
                    //    //    //alert("Deselect value: " + values);
                    //    //}
                    //});

                    addMestaRelacija();


                    $("#vozac").autocomplete({
                        source: function (request, response) {

                            $.ajax({
                                url: "/Zaposleni/GetZaposleniAutoComplete?query=" + request.term,
                                dataType: "json",
                                success: function (data) {
                                    response($.map(data, function (v, i) {
                                        return {
                                            value: v.Name,
                                            id: v.Id,
                                            pomId: v.PomocniId
                                        };
                                    }));
                                }
                            });
                        },
                        minLength: 2,
                        select: function (event, ui) {
                            $('#VozacId').val(ui.item.id);
                            $('#RadnoMestoId').val(ui.item.pomId);
                            console.log("Kontakt ---- Selected: " + ui.item.id + " aka " + ui.item.value);

                        }
                    });



                });
                function addMestaRelacija() {
                    $.getJSON('@Url.Action("../Place/GetMestaRelacija")',  function (data) {
                        //console.log(data);
                        if (data != null && !jQuery.isEmptyObject(data)) {
                            $.each(data, function (index, mesta) {
                                //$('#relacija1').multiSelect('addOption',
                                //    {
                                //        value: mesta.idMesta,
                                //        text: mesta.nazivMesta,
                                //        index: 0,
                                //        nested: 'optgroup_label'
                                //    });

                                $('#relacija1').append($('<option/>', {
                                    value: mesta.idMesta,
                                    text: mesta.nazivMesta
                                }));
                            });
                        };
                    });
                }


            </script>



        }
    </div>
</div>
